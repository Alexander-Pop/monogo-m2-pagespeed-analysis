<?php
/**
 * Graph template
 *
 * @category PagespeedAnalysis
 * @package  Monogo|PagespeedAnalysis
 * @author   PaweÅ‚ Detka <pawel.detka@monogo.pl>
 */
?>
<?php
/**
 * @var $block \Monogo\PagespeedAnalysis\Block\Adminhtml\Pagespeed\Graph\ChartScript
 */
?>

<?php
$graphData = $this->getData('graph');
?>
<script>
    require(['https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js'], function (Chart) {

        <?php foreach ($graphData as $key => $item): ?>
        <?php if(!empty($item)): ?>
        <?php foreach ($item as $strategy => $data): ?>
        var chartMain<?= str_replace('=', '', $key)?><?=  $strategy ?>
            = new Chart(document.getElementById('main-<?=$strategy?>-<?=  str_replace('=', '', $key) ?>'), {
            "type": "line",
            "data": {
                "labels": <?= json_encode($data['created_at']) ?>,
                "datasets": [
                    {
                        "label": "Performance",
                        "data": <?= json_encode($data['performance']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getPerformanceColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,

                    },
                    {
                        "label": "SEO",
                        "data": <?= json_encode($data['seo']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getSeoColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "PWA",
                        "data": <?= json_encode($data['pwa']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getPwaColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },

                    {
                        "label": "Best Practices",
                        "data": <?= json_encode($data['best_practices']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getBestPracticesColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "Accessibility",
                        "data": <?= json_encode($data['accessibility']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getAccessibilityColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },

                ]
            },
            "options": {
                <?php if(!$this->getEnableAnimations()): ?>
                animation: {
                    duration: 0
                },
                <?php endif; ?>
                title: {
                    display: true,
                    text: '<?=  ucfirst($strategy) ?> PageSpeed score for <?= base64_decode($key) ?> (<?= __('last') . ' ' . $block->getChartHistory() . ' ' . __('days') ?>)'
                },
                tooltips: {
                    position: 'nearest',
                    intersect: false,
                    mode: 'index'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            <?php if(!$this->getUseAutoscale()): ?>
                            beginAtZero: true,
                            max: 100,
                            <?php endif; ?>
                            callback: function (value, index, values) {
                                return value + '%';
                            }
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            <?php if(!$this->getHideOxValues()): ?>
                            display:false,
                            <?php endif; ?>
                        }
                    }]

                }
            }
        });
        var chartTtfb<?= str_replace('=', '', $key)?><?=  $strategy ?>
            = new Chart(document.getElementById('ttfb-<?=$strategy?>-<?=  str_replace('=', '', $key) ?>'), {
            "type": "line",
            "data": {
                "labels": <?= json_encode($data['created_at']) ?>,
                "datasets": [
                    {
                        "label": "TTFB",
                        "data": <?= json_encode($data['ttfb']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getTtfbColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "First Contentful Paint",
                        "data": <?= json_encode($data['first_contentful_paint']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getFirstContentfulPaintColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "First Meaningful Paint",
                        "data": <?= json_encode($data['first_meaningful_paint']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getFirstMeaningfulPaintColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "Speed Index",
                        "data": <?= json_encode($data['speed_index']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getSpeedIndexColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "Interactive",
                        "data": <?= json_encode($data['interactive']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getInteractiveColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    },
                    {
                        "label": "First CPU Idle",
                        "data": <?= json_encode($data['first_cpu_idle']) ?>,
                        "fill": false,
                        "borderColor": "<?= $block->getFirstCpuIdleColor() ?>",
                        "lineTension": 0.1,
                        "pointRadius": <?= $block->getPointRadius() ?>,
                        "pointHoverRadius":<?= $block->getPointHoverRadius() ?>,
                    }
                ]
            },
            "options": {
                <?php if(!$this->getEnableAnimations()): ?>
                animation: {
                    duration: 0
                },
                <?php endif; ?>
                title: {
                    display: true,
                    text: '<?=  ucfirst($strategy) ?> Timing for <?= base64_decode($key) ?> (<?= __('last') . ' ' . $block->getChartHistory() . ' ' . __('days') ?>)'
                },
                tooltips: {
                    position: 'nearest',
                    intersect: false,
                    mode: 'index'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            <?php if(!$this->getUseAutoscale()): ?>
                            beginAtZero: true,
                            max: <?= $this->getMaxValue($strategy) ?>,
                            <?php endif; ?>
                            callback: function (value, index, values) {
                                return value + 'ms';
                            }
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            <?php if(!$this->getHideOxValues()): ?>
                            display:false,
                            <?php endif; ?>
                        }
                    }]
                }
            }
        });

        <?php endforeach; ?>
        <?php endif; ?>
        <?php endforeach; ?>
    });

</script>
